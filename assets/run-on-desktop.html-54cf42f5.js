import{_ as d,r as i,o as c,c as r,d as a,e,a as o,b as n}from"./app-402d39cd.js";const l={},t=n('<h1 id="在桌面平台运行" tabindex="-1"><a class="header-anchor" href="#在桌面平台运行" aria-hidden="true">#</a> 在桌面平台运行</h1><blockquote><p>从 <code>1.1.0</code> 开始，<code>DexKit</code> 支持桌面平台运行，无需打包成 apk 在 Android 进行测试工作。</p></blockquote><h2 id="安装环境" tabindex="-1"><a class="header-anchor" href="#安装环境" aria-hidden="true">#</a> 安装环境</h2><p>需要 gcc/clang、cmake 以及 ninja/make 作为基础运行环境。</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3>',5),p=a("code",null,"Windows",-1),h={href:"https://www.msys2.org/",target:"_blank",rel:"noopener noreferrer"},m=a("code",null,"mingw64.exe",-1),u=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F69D50;">pacman</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">-S</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">mingw-w64-x86_64-gcc</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">mingw-w64-x86_64-cmake</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">mingw-w64-x86_64-ninja</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后，我们需要将 <code>mingw64/bin</code> 目录添加进环境变量中便于后续使用。</p><div class="custom-container warning"><p class="custom-container-title">warning</p><p>DexKit 默认将使用 <code>ninja</code> 作为默认构建系统，如果您需要在 mingw 中使用 <code>make</code> 进行构建， 需要执行 <code>pacman -S mingw-w64-x86_64-make</code>，安装完成后需要将 <code>msys64\\mingw64\\bin\\mingw32-make.exe</code> 重命名为 <code>make.exe</code> 或者添加为快捷方式，否则会由于 <code>gradle-cmake-plugin</code> 找不到 <code>make</code> 命令而构建失败。 同时删除 <code>:dexkit/build.gradle</code> 中的 <code>generator.set(generators.ninja)</code> ，或者修改为 <code>generator.set(generators.unixMakefiles)</code></p></div><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><p>对于Linux用户，正常情况只需要安装 <code>ninja</code> 即可。</p><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos" aria-hidden="true">#</a> MacOS</h3>`,6),b={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},g=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F69D50;">brew</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">install</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">cmake</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">ninja</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="克隆-dexkit" tabindex="-1"><a class="header-anchor" href="#克隆-dexkit" aria-hidden="true">#</a> 克隆 DexKit</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F69D50;">git</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">clone</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">https://github.com/LuckyPray/DexKit.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="开始使用" tabindex="-1"><a class="header-anchor" href="#开始使用" aria-hidden="true">#</a> 开始使用</h2><p>执行子模块 <code>:main</code> 即可进行测试。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F69D50;">gradle</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">:main:run</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function x(k,_){const s=i("ExternalLinkIcon");return c(),r("div",null,[t,a("p",null,[p,e(" 用户可以使用 "),a("a",h,[e("MSYS2"),o(s)]),e(" 搭建运行环境。由于目前Windows系统均为64位， 所以我们使用 "),m,e(" 进行依赖安装：")]),u,a("p",null,[e("推荐使用 "),a("a",b,[e("HomeBrew"),o(s)]),e(" 进行依赖管理，")]),g])}const v=d(l,[["render",x],["__file","run-on-desktop.html.vue"]]);export{v as default};
