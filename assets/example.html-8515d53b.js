import{_ as p,r as e,o,c,d as s,e as n,a as l,b as r}from"./app-402d39cd.js";const t={},i=s("h1",{id:"用法示例",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#用法示例","aria-hidden":"true"},"#"),n(" 用法示例")],-1),A=s("p",null,[n("在阅读本部分内容的过程中可能需要搭配"),s("a",{href:"./structural-zoom-table"},"结构速查表"),n("以获得更好的理解。")],-1),y=s("blockquote",null,[s("p",null,"您可以在下方获取 Demo 的源码以及部分测试用例")],-1),d={href:"https://github.com/LuckyPray/DexKit/tree/master/demo",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/LuckyPray/DexKit/blob/master/dexkit/src/test/java/org/luckypray/dexkit/UnitTest.kt",target:"_blank",rel:"noopener noreferrer"},B=r(`<h2 id="demo-app" tabindex="-1"><a class="header-anchor" href="#demo-app" aria-hidden="true">#</a> Demo App</h2><p>下面是一个简单的 Demo Activity。这个 PlayActivity 内部属性以及方法都是被混淆的，且每个版本都会发生变化。</p><blockquote><p>四大组件默认不会混淆，我们假设这个 Activity 被混淆了。</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">package</span><span style="color:#ADBAC7;"> org.luckypray.dexkit.demo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.Bundle;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.Handler;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.HandlerThread;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.util.Log;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.view.View;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.widget.Button;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.widget.TextView;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> androidx.appcompat.app.AppCompatActivity;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> androidx.appcompat.widget.h;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> java.util.Random;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> org.luckypray.dexkit.demo.annotations.Router;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Router</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">path</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;/play&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">PlayActivity</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">AppCompatActivity</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">TAG</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> TextView</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">a;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Handler</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">b;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(View </span><span style="color:#F69D50;">view</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        Handler</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">handler;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i;</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onClick: rollButton&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">float</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">nextFloat</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Random</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">nextFloat</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (nextFloat </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.01d</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (nextFloat </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.987f</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">114514</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        handler.</span><span style="color:#DCBDFB;">sendEmptyMessage</span><span style="color:#ADBAC7;">(i);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">e</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">z</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">z) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> RandomUtil.</span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">a</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h.</span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;You rolled a &quot;</span><span style="color:#ADBAC7;">, i);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.a.</span><span style="color:#DCBDFB;">setText</span><span style="color:#ADBAC7;">(a);</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;rollDice: &quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> a);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">protected</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">onCreate</span><span style="color:#ADBAC7;">(Bundle </span><span style="color:#F69D50;">bundle</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">super</span><span style="color:#768390;">/*androidx.fragment.app.FragmentActivity*/</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">onCreate</span><span style="color:#ADBAC7;">(bundle);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">setContentView</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f0b001d</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        HandlerThread</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">handlerThread</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">HandlerThread</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        handlerThread.</span><span style="color:#DCBDFB;">start</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">PlayActivity$1</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">, handlerThread.</span><span style="color:#DCBDFB;">getLooper</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.a </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (TextView) </span><span style="color:#DCBDFB;">findViewById</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f080134</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        ((Button) </span><span style="color:#DCBDFB;">findViewById</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f08013a</span><span style="color:#ADBAC7;">)).</span><span style="color:#DCBDFB;">setOnClickListener</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多条件匹配类多条件用法示例" tabindex="-1"><a class="header-anchor" href="#多条件匹配类多条件用法示例" aria-hidden="true">#</a> 多条件匹配类多条件用法示例</h2><p>此时我们想得到这个 PlayActivity 可以使用如下代码：</p><blockquote><p>这仅仅是个样例，实际使用中并不需要这么复杂且全面的条件，按需使用即可。</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findPlayActivity</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> classData </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> bridge.</span><span style="color:#DCBDFB;">findClass</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 指定搜索的包名范围</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">searchPackages</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 排除指定的包名范围</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">excludePackages</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo.annotations&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// ClassMatcher 针对类的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// FieldsMatcher 针对类中包含字段的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">fields</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 添加对于字段的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定字段的修饰符</span></span>
<span class="line"><span style="color:#ADBAC7;">                    modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PRIVATE or Modifier.STATIC or Modifier.FINAL</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定字段的类型</span></span>
<span class="line"><span style="color:#ADBAC7;">                    type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;java.lang.String&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定字段的名称</span></span>
<span class="line"><span style="color:#ADBAC7;">                    name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;TAG&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 添加指定字段的类型的字段匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">addForType</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.widget.TextView&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">addForType</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.os.Handler&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 指定类中字段的数量</span></span>
<span class="line"><span style="color:#ADBAC7;">                count </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">3</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// MethodsMatcher 针对类中包含方法的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">methods</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 添加对于方法的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法的修饰符</span></span>
<span class="line"><span style="color:#ADBAC7;">                    modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PROTECTED</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法的名称</span></span>
<span class="line"><span style="color:#ADBAC7;">                    name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法的返回值类型</span></span>
<span class="line"><span style="color:#ADBAC7;">                    returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法的参数类型，如果参数类型不确定，使用 null，使用此方法会隐式声明参数个数</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.os.Bundle&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法中使用的字符串</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法中使用的数字，类型为 Byte, Short, Int, Long, Float, Double 之一</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">usingNumbers</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0.01</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.987</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">114514</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;boolean&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定方法中调用的方法列表</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">invokeMethods</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">                            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;int&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                            </span><span style="color:#768390;">// 指定方法中调用的方法中使用的字符串，所有字符串均使用 Equals 匹配</span></span>
<span class="line"><span style="color:#ADBAC7;">                            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">listOf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;getRandomDice: &quot;</span><span style="color:#ADBAC7;">), StringMatchType.Equals)</span></span>
<span class="line"><span style="color:#ADBAC7;">                        }</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// 只需要包含上述方法的调用即可</span></span>
<span class="line"><span style="color:#ADBAC7;">                        matchType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MatchType.Contains</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 指定类中方法的数量，最少不少于1个，最多不超过10个</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">count</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#F47067;">..</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// AnnotationsMatcher 针对类中包含注解的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">annotations</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 添加对于注解的匹配器</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 指定注解的类型</span></span>
<span class="line"><span style="color:#ADBAC7;">                    type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo.annotations.Router&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// 该注解需要包含指定的 element</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">addElement</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// 指定 element 的名称</span></span>
<span class="line"><span style="color:#ADBAC7;">                        name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;path&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// 指定 element 的值</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">stringValue</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;/play&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 类中所有方法使用的字符串</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(classData.name)</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获得的结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="父类条件嵌套" tabindex="-1"><a class="header-anchor" href="#父类条件嵌套" aria-hidden="true">#</a> 父类条件嵌套</h2><p>如果存在这么一个类，它唯一的特征是祖辈没被混淆，中间的父类都被混淆了，我们也可以使用 <code>DexKit</code> 来找到它。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findActivity</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findClass</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// androidx.appcompat.app.AppCompatActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// androidx.fragment.app.FragmentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// androidx.activity.ComponentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// androidx.core.app.ComponentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                            superClass </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;android.app.Activity&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                        }</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// org.luckypray.dexkit.demo.MainActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(it.name)</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获得的结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.MainActivity</span></span>
<span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">小提示</p><p>在 <code>DexKit</code> 中，一切符合逻辑的关系都可以作为查询条件</p></div><h2 id="模糊参数匹配" tabindex="-1"><a class="header-anchor" href="#模糊参数匹配" aria-hidden="true">#</a> 模糊参数匹配</h2><p>如果我们需要寻找的方法中存在一个被混淆的参数，我们可以使用 <code>null</code> 来替代，这样它就能匹配任意类型的参数。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findMethodWithFuzzyParam</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 指定方法的参数类型，如果参数类型不确定，使用 null</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// paramCount = 2 // paramTypes 长度为 2 已经隐式确定了参数个数</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">let</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(it)</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询结果保存与读取" tabindex="-1"><a class="header-anchor" href="#查询结果保存与读取" aria-hidden="true">#</a> 查询结果保存与读取</h2><p>使用 DexKit 查询到的结果如何序列化保存下来，以便下次使用呢？</p><p>DexKit 中对 Class、Method、Field 提供了相应的包装类，分别是 <code>DexClass</code>、<code>DexMethod</code>、<code>DexField</code>。 包装类继承了 <code>ISerializable</code> 接口，可以使用它将包装类与字符串自由转换。对于查询返回的对象，可以直接使用 <code>toDexClass()</code>、<code>toDexMethod()</code>、<code>toDexField()</code> 方法来转换为包装类。</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">saveData</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">let</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> dexMethod </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> it.</span><span style="color:#DCBDFB;">toDexMethod</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> serialize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dexMethod.</span><span style="color:#DCBDFB;">serialize</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> sp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">getSharedPreferences</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;dexkit&quot;</span><span style="color:#ADBAC7;">, Context.MODE_PRIVATE)</span></span>
<span class="line"><span style="color:#ADBAC7;">        sp.</span><span style="color:#DCBDFB;">edit</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">putString</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClickMethod&quot;</span><span style="color:#ADBAC7;">, serialize).</span><span style="color:#DCBDFB;">apply</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">readData</span><span style="color:#ADBAC7;">(): </span><span style="color:#F69D50;">Method</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> sp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">getSharedPreferences</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;dexkit&quot;</span><span style="color:#ADBAC7;">, Context.MODE_PRIVATE)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> descriptor </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sp.</span><span style="color:#DCBDFB;">getString</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClickMethod&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (descriptor </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> dexMethod </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">DexMethod</span><span style="color:#ADBAC7;">(descriptor)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = DexMethod.deserialize(serialize)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = ISerializable.deserialize(serialize) as DexMethod</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = ISerializable.deserializeAs&lt;DexMethod&gt;(serialize)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> method </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dexMethod.</span><span style="color:#DCBDFB;">getMethodInstance</span><span style="color:#ADBAC7;">(hostClassLoader)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> method</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">error</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;No saved&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function C(v,u){const a=e("ExternalLinkIcon");return o(),c("div",null,[i,A,y,s("ul",null,[s("li",null,[n("APP Demo "),s("a",d,[n("点击查看"),l(a)])]),s("li",null,[n("APP 测试用例 "),s("a",D,[n("点击查看"),l(a)])])]),B])}const m=p(t,[["render",C],["__file","example.html.vue"]]);export{m as default};
