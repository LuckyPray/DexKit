import{_ as e,r as p,o,c,d as s,e as n,a as l,b as t}from"./app-402d39cd.js";const r={},i=s("h1",{id:"usage-examples",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#usage-examples","aria-hidden":"true"},"#"),n(" Usage Examples")],-1),A=s("p",null,[n("During the reading of this section, you may need to refer to the "),s("a",{href:"./structural-zoom-table"},"Structural Quick Reference Table"),n(" for a better understanding.")],-1),y=s("blockquote",null,[s("p",null,"You can get the source code and some test cases for the demo below.")],-1),d={href:"https://github.com/LuckyPray/DexKit/tree/master/demo",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/LuckyPray/DexKit/blob/master/dexkit/src/test/java/org/luckypray/dexkit/UnitTest.kt",target:"_blank",rel:"noopener noreferrer"},B=t(`<h2 id="demo-app" tabindex="-1"><a class="header-anchor" href="#demo-app" aria-hidden="true">#</a> Demo App</h2><p>Here is a simple Demo Activity, PlayActivity, where the internal properties and methods are obfuscated, and they change in each version.</p><blockquote><p>The four major components are not obfuscated by default. We assume this Activity is obfuscated.</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">package</span><span style="color:#ADBAC7;"> org.luckypray.dexkit.demo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.Bundle;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.Handler;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.os.HandlerThread;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.util.Log;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.view.View;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.widget.Button;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> android.widget.TextView;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> androidx.appcompat.app.AppCompatActivity;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> androidx.appcompat.widget.h;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> java.util.Random;</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> org.luckypray.dexkit.demo.annotations.Router;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Router</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">path</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;/play&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">PlayActivity</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">AppCompatActivity</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">final</span><span style="color:#ADBAC7;"> String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">TAG</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> TextView</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">a;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Handler</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">b;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(View </span><span style="color:#F69D50;">view</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        Handler</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">handler;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i;</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onClick: rollButton&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">float</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">nextFloat</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Random</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">nextFloat</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (nextFloat </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.01d</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (nextFloat </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.987f</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            handler </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b;</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">114514</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        handler.</span><span style="color:#DCBDFB;">sendEmptyMessage</span><span style="color:#ADBAC7;">(i);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">e</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">z</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">z) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> RandomUtil.</span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">a</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h.</span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;You rolled a &quot;</span><span style="color:#ADBAC7;">, i);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.a.</span><span style="color:#DCBDFB;">setText</span><span style="color:#ADBAC7;">(a);</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;rollDice: &quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> a);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">protected</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">onCreate</span><span style="color:#ADBAC7;">(Bundle </span><span style="color:#F69D50;">bundle</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">super</span><span style="color:#768390;">/*androidx.fragment.app.FragmentActivity*/</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">onCreate</span><span style="color:#ADBAC7;">(bundle);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">setContentView</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f0b001d</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        Log.</span><span style="color:#DCBDFB;">d</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        HandlerThread</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">handlerThread</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">HandlerThread</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        handlerThread.</span><span style="color:#DCBDFB;">start</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.b </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">PlayActivity$1</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">, handlerThread.</span><span style="color:#DCBDFB;">getLooper</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.a </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (TextView) </span><span style="color:#DCBDFB;">findViewById</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f080134</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        ((Button) </span><span style="color:#DCBDFB;">findViewById</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0x7f08013a</span><span style="color:#ADBAC7;">)).</span><span style="color:#DCBDFB;">setOnClickListener</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">a</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="multiple-conditions-matching-class-example-usage" tabindex="-1"><a class="header-anchor" href="#multiple-conditions-matching-class-example-usage" aria-hidden="true">#</a> Multiple Conditions Matching Class - Example Usage</h2><p>In this scenario, we want to find the PlayActivity using the following code:</p><blockquote><p>This is just an example. In actual use, you don&#39;t need conditions as complex and comprehensive as this. Use as needed.</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findPlayActivity</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> classData </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> bridge.</span><span style="color:#DCBDFB;">findClass</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// Search within the specified package name range</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">searchPackages</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// Exclude the specified package name range</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">excludePackages</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo.annotations&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// ClassMatcher Matcher for classes</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// FieldsMatcher Matcher for fields in a class</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">fields</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// Add a matcher for the field</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the modifiers of the field</span></span>
<span class="line"><span style="color:#ADBAC7;">                    modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PRIVATE or Modifier.STATIC or Modifier.FINAL</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the type of the field</span></span>
<span class="line"><span style="color:#ADBAC7;">                    type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;java.lang.String&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the name of the field</span></span>
<span class="line"><span style="color:#ADBAC7;">                    name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;TAG&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// Add a matcher for the field of the specified type</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">addForType</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.widget.TextView&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">addForType</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.os.Handler&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// Specify the number of fields in the class</span></span>
<span class="line"><span style="color:#ADBAC7;">                count </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">3</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// MethodsMatcher Matcher for methods in a class</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">methods</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// Add a matcher for the method</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the modifiers of the method</span></span>
<span class="line"><span style="color:#ADBAC7;">                    modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PROTECTED</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the name of the method</span></span>
<span class="line"><span style="color:#ADBAC7;">                    name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the return type of the method</span></span>
<span class="line"><span style="color:#ADBAC7;">                    returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the parameter types of the method, if the parameter types are uncertain,</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// use null, and this method will implicitly declare the number of parameters</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.os.Bundle&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the strings used in the method</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the numbers used in the method, the type is Byte, Short, Int, Long, Float, Double</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">usingNumbers</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0.01</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.987</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">114514</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;boolean&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the methods called in the method list</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">invokeMethods</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">                            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;int&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                            </span><span style="color:#768390;">// Specify the strings used in the method called in the method,</span></span>
<span class="line"><span style="color:#ADBAC7;">                            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">listOf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;getRandomDice: &quot;</span><span style="color:#ADBAC7;">), StringMatchType.Equals)</span></span>
<span class="line"><span style="color:#ADBAC7;">                        }</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// Only need to contain the call to the above method</span></span>
<span class="line"><span style="color:#ADBAC7;">                        matchType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MatchType.Contains</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">count</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#F47067;">..</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// AnnotationsMatcher Matcher for annotations in a class</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">annotations</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// Add a matcher for the annotation</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// Specify the type of the annotation</span></span>
<span class="line"><span style="color:#ADBAC7;">                    type </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;org.luckypray.dexkit.demo.annotations.Router&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// The annotation needs to contain the specified element</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">addElement</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// Specify the name of the element</span></span>
<span class="line"><span style="color:#ADBAC7;">                        name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;path&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// Specify the value of the element</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">stringValue</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;/play&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// Strings used by all methods in the class</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;PlayActivity&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;onCreate&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(classData.name)</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The result is as follows:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="parent-class-condition-nesting" tabindex="-1"><a class="header-anchor" href="#parent-class-condition-nesting" aria-hidden="true">#</a> Parent Class Condition Nesting</h2><p>if there is such a class, its only feature is that the ancestors are not obfuscated, and the middle parents are all obfuscated, we can also use <code>DexKit</code> to find it.</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findActivity</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findClass</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// androidx.appcompat.app.AppCompatActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// androidx.fragment.app.FragmentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#768390;">// androidx.activity.ComponentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#768390;">// androidx.core.app.ComponentActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">                        </span><span style="color:#DCBDFB;">superClass</span><span style="color:#ADBAC7;"> { </span><span style="color:#768390;">// ClassMatcher</span></span>
<span class="line"><span style="color:#ADBAC7;">                            superClass </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;android.app.Activity&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">                        }</span></span>
<span class="line"><span style="color:#ADBAC7;">                    }</span></span>
<span class="line"><span style="color:#ADBAC7;">                }</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// org.luckypray.dexkit.demo.MainActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(it.name)</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The result is as follows:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.MainActivity</span></span>
<span class="line"><span style="color:#adbac7;">org.luckypray.dexkit.demo.PlayActivity</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>In <code>DexKit</code>, any logical relationship can be used as a query condition</p></div><h2 id="fuzzy-parameter-matching" tabindex="-1"><a class="header-anchor" href="#fuzzy-parameter-matching" aria-hidden="true">#</a> Fuzzy Parameter Matching</h2><p>If we need to find a method with an obfuscated parameter, we can use <code>null</code> to replace it, so that it can match any type of parameter.</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">findMethodWithFuzzyParam</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// Specify the parameters of the method, if the parameters are uncertain, use null</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// paramCount = 2 // paramTypes length is 2, which has implicitly determined the number of parameters</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">let</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(it)</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="saving-and-retrieving-query-results" tabindex="-1"><a class="header-anchor" href="#saving-and-retrieving-query-results" aria-hidden="true">#</a> Saving and Retrieving Query Results</h2><p>How can you serialize and save the results obtained from DexKit queries for later use?</p><p>DexKit provides corresponding wrapper classes for Class, Method, and Field, namely <code>DexClass</code>, <code>DexMethod</code>, and <code>DexField</code>. These wrapper classes inherit from the <code>ISerializable</code> interface, allowing them to be freely converted to and from strings. For objects returned by queries, you can directly use the <code>toDexClass()</code>, <code>toDexMethod()</code>, and <code>toDexField()</code> methods to convert them into the respective wrapper classes.</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">saveData</span><span style="color:#ADBAC7;">(bridge: </span><span style="color:#F69D50;">DexKitBridge</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    bridge.</span><span style="color:#DCBDFB;">findMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#DCBDFB;">matcher</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            modifiers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Modifier.PUBLIC or Modifier.STATIC</span></span>
<span class="line"><span style="color:#ADBAC7;">            returnType </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;void&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">paramTypes</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;android.view.View&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#DCBDFB;">usingStrings</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClick&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }.</span><span style="color:#DCBDFB;">single</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">let</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> dexMethod </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> it.</span><span style="color:#DCBDFB;">toDexMethod</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> serialize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dexMethod.</span><span style="color:#DCBDFB;">serialize</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> sp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">getSharedPreferences</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;dexkit&quot;</span><span style="color:#ADBAC7;">, Context.MODE_PRIVATE)</span></span>
<span class="line"><span style="color:#ADBAC7;">        sp.</span><span style="color:#DCBDFB;">edit</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">putString</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClickMethod&quot;</span><span style="color:#ADBAC7;">, serialize).</span><span style="color:#DCBDFB;">apply</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">fun</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">readData</span><span style="color:#ADBAC7;">(): </span><span style="color:#F69D50;">Method</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> sp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">getSharedPreferences</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;dexkit&quot;</span><span style="color:#ADBAC7;">, Context.MODE_PRIVATE)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> descriptor </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sp.</span><span style="color:#DCBDFB;">getString</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;onClickMethod&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (descriptor </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> dexMethod </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">DexMethod</span><span style="color:#ADBAC7;">(descriptor)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = DexMethod.deserialize(serialize)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = ISerializable.deserialize(serialize) as DexMethod</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// val dexMethod = ISerializable.deserializeAs&lt;DexMethod&gt;(serialize)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">val</span><span style="color:#ADBAC7;"> method </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dexMethod.</span><span style="color:#DCBDFB;">getMethodInstance</span><span style="color:#ADBAC7;">(hostClassLoader)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> method</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#DCBDFB;">error</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;No saved&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function C(v,u){const a=p("ExternalLinkIcon");return o(),c("div",null,[i,A,y,s("ul",null,[s("li",null,[n("APP Demo "),s("a",d,[n("Click to View"),l(a)])]),s("li",null,[n("APP Test Cases "),s("a",D,[n("Click to View"),l(a)])])]),B])}const F=e(r,[["render",C],["__file","example.html.vue"]]);export{F as default};
