import{_ as o,M as t,p as r,q as d,R as n,t as e,N as i,a1 as a}from"./framework-96b046e1.js";const c={},l=a('<h1 id="run-on-desktop-platform" tabindex="-1"><a class="header-anchor" href="#run-on-desktop-platform" aria-hidden="true">#</a> Run on desktop platform</h1><blockquote><p>Starting from version <code>1.1.0</code>, DexKit supports running on desktop platforms without the need for packaging as an APK for testing on Android.</p></blockquote><h2 id="install-environment" tabindex="-1"><a class="header-anchor" href="#install-environment" aria-hidden="true">#</a> Install environment</h2><p>The basic runtime environment requires gcc/clang, cmake, and ninja/make.</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3>',5),u=n("code",null,"Windows",-1),h={href:"https://www.msys2.org/",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"mingw64.exe",-1),p=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">pacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-ninja</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After installation, we need to add the <code>mingw64/bin</code> directory to the environment variables for future use.</p><div class="custom-container warning"><p class="custom-container-title">warning</p><p>DexKit will use <code>ninja</code> as the default build system by default. If you need to use <code>make</code> in mingw for building, you need to execute <code>pacman -S mingw-w64-x86_64-make</code>, after installation, you need to rename <code>msys64\\mingw64\\bin\\mingw32-make.exe</code> to <code>make.exe</code> or add it as a shortcut, otherwise the build will fail due to <code>gradle-cmake-plugin</code> not finding the make command. At the same time, delete <code>generator.set(generators.ninja)</code> in <code>:dexkit/build.gradle</code>, or modify it to <code>generator.set(generators.unixMakefiles)</code>.</p></div><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><p>For Linux users, normally only need to install <code>ninja</code> to use it.</p><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos" aria-hidden="true">#</a> MacOS</h3>`,6),g={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">brew install cmake ninja</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="clone-dexkit" tabindex="-1"><a class="header-anchor" href="#clone-dexkit" aria-hidden="true">#</a> Clone DexKit</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">git clone https://github.com/LuckyPray/DexKit.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="to-begin-using" tabindex="-1"><a class="header-anchor" href="#to-begin-using" aria-hidden="true">#</a> To begin using</h2><p>Execute the submodule <code>:main</code> to perform testing.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">gradle :main:run</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function f(k,x){const s=t("ExternalLinkIcon");return r(),d("div",null,[l,n("p",null,[u,e(" users can use "),n("a",h,[e("MSYS2"),i(s)]),e(" to set up the runtime environment. Since all Windows systems are currently 64-bit, we use "),m,e(" for dependency installation:")]),p,n("p",null,[e("It's recommended to use "),n("a",g,[e("HomeBrew"),i(s)]),e(" for dependency management.")]),b])}const w=o(c,[["render",f],["__file","run-on-desktop.html.vue"]]);export{w as default};
